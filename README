open-dnp3
Copyright (c) 2010, 2011 Green Energy Corp.
Copyright (c) 2013 Automatak LLC

Licensed under the terms of the Apache Public License
v2.0.  Modifications made by Automatak, LLC are licensed under the terms
GNU Affero General Public License Version 3.0. Contact Automatak, LLC
for a commercial license to these modifications.

About AGPLv3
============

AGPLv3 is a copyleft license that triggers even if you are only using the library against a 3rd
party over a network. You must either abide by the terms of the license or purchase a proprietary
friendly license.

History
=======

This is a commercial fork of the project originally located here:

www.github.com/gec/dnp3

The original license and copyright must be respected. Automatak, LLC has only licensed
modifications to code under the AGPLv3.

Overview
========

OpenDNP3 is a portable, scalable, and rigorously tested implementation 
of the DNP3 (www.dnp.org) protocol stack written in C++. The library 
is optimized for massively parallel front end processor implementations
and slave device simulations, although it performs very well on 
embedded linux ARM.

Custom written, idiomatic bindings are available are available for the 
Microsoft CLR family of languages (C#, VB.NET, F#, etc) and JVM-based
languages (Java, Scala, Clojure, etc).


Organization
============

The repository is organized by language:

  cpp		core C++ opendnp3 library
	
  java		jni bindings for Java

  clr		Microsoft CLR wrappers

Building and Installing
=======================

The OpenDNP3 library has been verified under linux, cygwin, and windows.
Three build systems are included:
  
  1. GNU autotools
  2. Visual Studio 2012 SLN and PROJ files

GNU autotools
=============

The GNU autotools are comprised of two packages, GNU autoconf and GNU
automake.  Libtool support is required.  Lcov support may be
required if you choose to build those options.

Requirements:

  - boost v1.52 or later            (required) 
    * boost::system                 (required) 
    * Boost Unit Test Framework     (required)
  - docbook v0.6.14 or later        (required if 'make docs')
  - lcov                            (required if 'make lcov')
  - libtool                         (required)
  - Java JDK with JNI support       (required if 'configure --with-java=javac')

To start, first reinitialize autotools to be compatible with the version
running on your system:

  autoreconf -f -i

Next, run the 'configure' script:

  ./configure

A full list of options can be found using './configure --help'.

You can now build the OpenDNP3 libraries and programs:

  make

When ready, you can install the libraries, headers, and programs onto
your system:

  make install

If you want to build the doxygen code documentation, use the following
make target after configuring the system:

  make doxygen-doc

The resulting HTML documentation will be placed in a folder named
'doxygen-doc'.

If you want to build the libraries with lcov support (analysis tool for
code coverage of the unit/integration test infrastructure), the process
changes slightly:

  autoreconf -f -i
  ./configure --enable-lcov
  make
  ./dnp3test
  make lcov

The lcov HTML report is written to './lcov/html/index.html' and can be
opened with any standard web browser.

If you will be making changes to the unit/integration test
infrastructure while analyzing the lcov results, use an alternate
sequence to reduce the amount of rebuilding required:

  autoreconf -f -i
  ./configure --enable-lcov
  make
  ./dnp3test
  make lcov

  Iterate on the following sequence after changing the tests:

     make lcov-reset        ; # Reset lcov data between each run
     make                   ; # Rebuild with the new changes
     ./dnp3test             ; # Profile the new changes
     make lcov-report       ; # Regenerate the lcov report
